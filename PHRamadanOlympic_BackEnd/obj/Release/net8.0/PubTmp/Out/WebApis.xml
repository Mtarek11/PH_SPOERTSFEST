<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebApis</name>
    </assembly>
    <members>
        <member name="T:WebApis.AuthenticationController">
            <summary>
            Authentication APIs
            </summary>
            <param name="_userManager"></param>
        </member>
        <member name="M:WebApis.AuthenticationController.#ctor(Reposatiory.UserManager)">
            <summary>
            Authentication APIs
            </summary>
            <param name="_userManager"></param>
        </member>
        <member name="M:WebApis.AuthenticationController.SignUpForUserAsync(ViewModels.UserSignUpViewModel)">
            <summary>
            Sign up ==> national id and national id image are not requierd, unless user above 18 years old, gender ==> 1-male / 2-female
            </summary>
            <param name="viewModel"></param>
            <returns></returns>
        </member>
        <member name="M:WebApis.AuthenticationController.SignInForUserAsync(ViewModels.UserSignInViewModel)">
            <summary>
            Sign in 
            </summary>
            <param name="viewModel"></param>
            <returns></returns>
        </member>
        <member name="M:WebApis.AuthenticationController.GetForgetPasswordCodeAsync(System.String)">
            <summary>
            Send forget password code to user email, if the email founded in the DB
            </summary>
            <param name="Email"></param>
            <returns></returns>
        </member>
        <member name="M:WebApis.AuthenticationController.ResetPasswordCodeAsync(ViewModels.UserResetPasswordViewModel)">
            <summary>
            Reset user password 
            </summary>
            <param name="viewModel"></param>
            <returns></returns>
        </member>
        <member name="T:WebApis.TeamAndIndividualController">
            <summary>
            Team and Individual apis
            </summary>
            <param name="_teamManager"></param>
        </member>
        <member name="M:WebApis.TeamAndIndividualController.#ctor(Reposatiory.TeamManager)">
            <summary>
            Team and Individual apis
            </summary>
            <param name="_teamManager"></param>
        </member>
        <member name="M:WebApis.TeamAndIndividualController.CreateTeamAsync(Models.Sport,Models.SportType,System.String,System.Collections.Generic.List{ViewModels.PlayerViewModel})">
            <summary>
            Create team ==> Sport type enum 1 for football, 2 for basketball, 3 for tennis, 4 for padel ==> neglect National id image url, personal image url and player id
            </summary>
            <param name="Sport"></param>
            <param name="TeamName"></param>
            <param name="Players"></param>
            <param name="sportType"></param>
            <returns></returns>
        </member>
        <member name="M:WebApis.TeamAndIndividualController.GetSportsAsync">
            <summary>
            Get user sports
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebApis.TeamAndIndividualController.GetTeamsAsync(Models.Sport,Models.SportType)">
            <summary>
            Get teams
            </summary>
            <param name="sport"></param>
            <param name="sportType"></param>
            <returns></returns>
        </member>
        <member name="M:WebApis.TeamAndIndividualController.GetTeamAsync(System.String)">
            <summary>
            Get team 
            </summary>
            <param name="teamId"></param>
            <returns></returns>
        </member>
        <member name="M:WebApis.TeamAndIndividualController.GetPlayersAsync(System.String)">
            <summary>
            Get players in the team 
            </summary>
            <param name="teamId"></param>
            <returns></returns>
        </member>
        <member name="M:WebApis.TeamAndIndividualController.DeleteTeamAsync(System.String)">
            <summary>
            Delete team 
            </summary>
            <param name="teamId"></param>
            <returns></returns>
        </member>
        <member name="T:WebApis.Filters.ExceptionFilter">
            <summary>
            For filter all exceptions
            </summary>
        </member>
        <member name="M:WebApis.Filters.ExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            Filtering exceptio function
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:WebApis.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:WebApis.Program.Main">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
